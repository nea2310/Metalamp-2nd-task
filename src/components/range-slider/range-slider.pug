mixin range-slider(options = {})
  -
    const {
      labelText = '',
      text = '',
      min,
      max,
      from,
      to,
      vertical,
      range,
      bar,
      tip,
      scale,
      scaleBase,
      step,
      interval,
      sticky,
      shiftOnKeyDown,
      shiftOnKeyHold
    } = options

    const prepareOptions = require ('@com/range-slider/range-slider-utils.js').default;

    const {
    elementName,
    verticalChecked,
    rangeChecked,
    barChecked,
    tipChecked,
    scaleChecked,
    stickyChecked,
    minChecked,
    maxChecked,
    fromChecked,
    toChecked,
    stepChecked,
    intervalChecked,
    shiftOnKeyDownChecked,
    shiftOnKeyHoldChecked,
    scaleBaseChecked,
    } = prepareOptions({
      min,
      max,
      from,
      to,
      vertical,
      range,
      bar,
      tip,
      scale,
      scaleBase,
      step,
      interval,
      sticky,
      shiftOnKeyDown,
      shiftOnKeyHold
    });

  div(class = `${elementName} js-${elementName}`)
    div(class = `${elementName}__wrapper`)
      div(class = `${elementName}__title-wrapper`)
        if labelText
          h3(class = `${elementName}__title`)= labelText
        div(class = `${elementName}__price`)
          input(class = `${elementName}__price-from` type = "text")
          span(class = `${elementName}__price-delimiter`) -
          input(class = `${elementName}__price-to` type = "text")
      input(class = 'slider-metalamp js-slider-metalamp' 
        data-min = minChecked
        data-max = maxChecked
        data-from = fromChecked
        data-to = toChecked
        data-vertical = verticalChecked
        data-range = rangeChecked
        data-bar = barChecked
        data-tip = tipChecked
        data-scale = scaleChecked
        data-scalebase = scaleBaseChecked
        data-step = stepChecked
        data-interval = intervalChecked
        data-sticky = stickyChecked
        data-shiftonkeydown = shiftOnKeyDownChecked
        data-shiftonkeyhold = shiftOnKeyHoldChecked
        )
      span(class = `${elementName}__text`)= text
    span(class = `${elementName}__measure-text-length js-${elementName}__measure-text-length`)