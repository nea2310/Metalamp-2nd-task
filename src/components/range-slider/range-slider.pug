mixin range-slider({labelText = '', text = '', sliderType = 0, min = 0, max = 0, step = 0, from = 0, to = 0, isMinMaxHidden = 'false', isFromToHidden = 'false'} = {})
  -
    const elementName = 'range-slider'

    function isNumber (value){
      const valid = typeof value === 'number' || (typeof value === 'string' && (!Number.isNaN(+value)))
      return valid ?  value : 0
    }
    function isInList (list, value, defaultValue) {
      return value = list.includes(value) ? value : defaultValue
    }

    sliderType = isNumber(sliderType)
    min = isNumber(min)
    max = isNumber(max)
    step = isNumber(step)
    from = isNumber(from)
    to = isNumber(to)

    const validStates = ['true', 'false']
    isMinMaxHidden = isInList(validStates, isMinMaxHidden, 'true')
    isFromToHidden = isInList(validStates, isFromToHidden, 'true')

  div(class = `${elementName} js-${elementName}`)
    div(class = `${elementName}__wrapper`)
      div(class = `${elementName}__title-wrapper`)
        if labelText
          p(class = `${elementName}__title`)= labelText
        div(class = `${elementName}__price`)
          input(class = `${elementName}__price-from` type = 'text')
          span(class = `${elementName}__price-delimiter`) -
          input(class = `${elementName}__price-to` type = 'text')
      input(class = `${elementName}__slider` type = 'text'
        data-type = sliderType data-min = min data-max = max data-step = step 
        data-from = from data-to = to data-hide-min-max = isMinMaxHidden data-hide-from-to = isFromToHidden)
      P(class = `${elementName}__text`)= text