extends ../ui-kit-layout/ui-kit-layout.pug

include ../../components/logo/logo.pug
include ../../components/date-dropdown/date-dropdown.pug
include ../../components/input-field/input-field.pug
include ../../components/dropdown/dropdown.pug
include ../../components/checklist/checklist.pug
include ../../components/radiobuttons/radiobuttons.pug
include ../../components/toggle/toggle.pug
include ../../components/like-button/like-button.pug
include ../../components/rate-button/rate-button.pug
include ../../components/range-slider/range-slider.pug
include ../../components/button/button.pug
include ../../components/feature/feature.pug
include ../../components/feedback/feedback.pug
include ../../components/bullet-list/bullet-list.pug
include ../../components/pagination/pagination.pug

block title
  title Form Elements
block content
  -
    const {
      textField,
      dropdownRooms,
      dropdownGuests,
      checkListExpandable,
      checkListCheckBox,
      checkListRichCheckBox,
      maskedTextField,
      dateDropdown,
      filterDateDropdown,
      subscriptionTextField,
      radiobuttons,
      toggles,
      likeButtons,
      rateButtons,
      rangeSlider,
      buttonDarkShort,
      buttonLightShort,
      buttonPlain,
      buttonDarkLong,
      bulletList,
      features,
      feedback
    } = require('@pag/form-elements/form-elements.json')

  main(class="form-elements")
    div(class="form-elements__wrapper-top")
      div(class="form-elements__column")
        div(class="form-elements__comp-wrapper")
          +input-field({
            width: textField.width,
            placeholder: textField.placeholder,
            labelText: textField.labelText,
            inputType: textField.inputType,
            validation: textField.validation})
        div(class="form-elements__comp-wrapper")
          +input-field({
            width: textField.width,
            placeholder: textField.placeholder,
            labelText: textField.labelText,
            inputType: textField.inputType,
            validation: textField.validation})
        div(class="form-elements__comp-wrapper")
          +dropdown({
            categories: dropdownRooms.categories, 
            type: dropdownRooms.type,
            placeholder: dropdownRooms.placeholder,
            labelText: dropdownRooms.labelText,
            width: dropdownRooms.width})
        div(class="form-elements__comp-wrapper")
          +input-field({
            width: maskedTextField.width,
            placeholder: maskedTextField.placeholder,
            labelText: maskedTextField.labelText,
            inputType: maskedTextField.inputType,
            validation: maskedTextField.validation})
        div(class="form-elements__comp-wrapper")
          +date-dropdown({
            width: dateDropdown.width,
            type: dateDropdown.type,
            labelTextFrom: dateDropdown.labelTextFrom,
            labelTextTo: dateDropdown.labelTextTo})
        div(class="form-elements__comp-wrapper")
          +date-dropdown({
            width: filterDateDropdown.width,
            type: filterDateDropdown.type,
            labelTextFromTo: filterDateDropdown.labelTextFromTo})
        div(class="form-elements__comp-wrapper")
          +input-field({
            width: subscriptionTextField.width,
            placeholder: subscriptionTextField.placeholder,
            labelText: subscriptionTextField.labelText,
            hasImage: subscriptionTextField.hasImage,
            name: subscriptionTextField.name,
            inputType: subscriptionTextField.inputType,
            validation: subscriptionTextField.validation})
        div(class="form-elements__comp-wrapper")
          +dropdown({
            categories: dropdownRooms.categories, 
            type: dropdownRooms.type,
            placeholder: dropdownRooms.placeholder,
            labelText: dropdownRooms.labelText,
            width: dropdownRooms.width})
        div(class="form-elements__comp-wrapper")
          +dropdown({
            categories: dropdownRooms.categories, 
            type: dropdownRooms.type,
            placeholder: dropdownRooms.placeholder,
            labelText: dropdownRooms.labelText,
            width: dropdownRooms.width})
        div(class="form-elements__comp-wrapper")
          +checklist({
            categories: checkListExpandable.categories,
            isExpandable: checkListExpandable.isExpandable,
            isRich: checkListExpandable.isRich, 
            labelText: checkListExpandable.labelText})
        div(class="form-elements__comp-wrapper")
          +checklist({
            categories: checkListExpandable.categories,
            isExpandable: checkListExpandable.isExpandable,
            isRich: checkListExpandable.isRich, 
            labelText: checkListExpandable.labelText})
      div(class="form-elements__column")
        div(class="form-elements__comp-wrapper")
          +checklist({
            categories: checkListCheckBox.categories,
            isExpandable: checkListCheckBox.isExpandable,
            isRich: checkListCheckBox.isRich, 
            labelText: checkListCheckBox.labelText})
        span(class='form-elements__label') radio buttons
        div(class="form-elements__comp-wrapper")
          +radiobuttons({
            categories: radiobuttons.categories,
            radioGroupName: radiobuttons.radioGroupName})
        span(class='form-elements__label') toggle
        div(class="form-elements__comp-wrapper")
          +toggle({name: toggles.name, isChecked: toggles.isChecked})
          +toggle({name: toggles.name})
        span(class='form-elements__label') like-button
        div(class="form-elements__comp-wrapper")
          +like-button({
            isLiked: likeButtons[0].isLiked, 
            likeAmount: likeButtons[0].likeAmount})
          +like-button({
            isLiked: likeButtons[1].isLiked, 
            likeAmount: likeButtons[1].likeAmount})
        span(class='form-elements__label') rate button
        div(class="form-elements__comp-wrapper")
          +rate-button({name: rateButtons[0]})
          +rate-button({name: rateButtons[1]})
        div(class="form-elements__comp-wrapper")
          +dropdown({
            categories: dropdownGuests.categories, 
            type: dropdownGuests.type,
            placeholder: dropdownGuests.placeholder,
            hasButtons: dropdownGuests.hasButtons,
            labelText: dropdownGuests.labelText,
            width: dropdownGuests.width})
        div(class="form-elements__comp-wrapper")
          +checklist({
            categories: checkListRichCheckBox.categories,
            isExpandable: checkListRichCheckBox.isExpandable,
            isRich: checkListRichCheckBox.isRich, 
            labelText: checkListRichCheckBox.labelText})
      div(class="form-elements__column")
        div(class="form-elements__comp-wrapper")
          +range-slider({
            labelText: rangeSlider.labelText,
            sliderType: rangeSlider.sliderType, 
            min: rangeSlider.min, 
            max: rangeSlider.max, 
            step: rangeSlider.step, 
            from: rangeSlider.from, 
            to: rangeSlider.to, 
            isMinMaxHidden: rangeSlider.isMinMaxHidden, 
            isFromToHidden: rangeSlider.isFromToHidden})
        span(class='form-elements__label') buttons
        div(class="form-elements__comp-wrapper")
          +button({
            text: buttonDarkShort.text,
            type: buttonDarkShort.type,
            length: buttonDarkShort.length,
            width: buttonDarkShort.width,
            color: buttonDarkShort.color,
            href: buttonDarkShort.href})
        div(class="form-elements__comp-wrapper")
          +button({
            text: buttonLightShort.text,
            type: buttonLightShort.type,
            length: buttonLightShort.length,
            width: buttonLightShort.width,
            color: buttonLightShort.color,
            href: buttonLightShort.href})
        div(class="form-elements__comp-wrapper")
          +button({
            text: buttonPlain.text,
            type: buttonPlain.type})
        div(class="form-elements__comp-wrapper")
          +button({
            text: buttonDarkLong.text,
            type: buttonDarkLong.type,
            length: buttonDarkLong.length,
            width: buttonDarkLong.width,
            color: buttonDarkLong.color,
            hasImage: buttonDarkLong.hasImage})
        span(class='form-elements__label') pagination
        div(class="form-elements__comp-wrapper")
          +pagination()
        div(class="form-elements__comp-wrapper")
          +dropdown({
            categories: dropdownGuests.categories, 
            type: dropdownGuests.type,
            placeholder: dropdownGuests.placeholder,
            hasButtons: dropdownGuests.hasButtons,
            labelText: dropdownGuests.labelText,
            width: dropdownGuests.width})
        span(class='form-elements__label') bullet list
        div(class="form-elements__comp-wrapper")
          +bullet-list({categories: bulletList.categories})
    div(class="form-elements__wrapper-bottom")
      div(class="form-elements__column")
        div(class="form-elements__comp-wrapper")
          +feature({
            imageName: require('@pag/form-elements/image/smile.svg'),
            name: features[0].name,
            description: features[0].description,
            alt: features[0].alt})
        div(class="form-elements__comp-wrapper")
          +feature({
            imageName: require('@pag/form-elements/image/city.svg'),
            name: features[1].name,
            description: features[1].description,
            alt: features[1].alt})
      div(class="form-elements__column")
        div(class="form-elements__comp-wrapper")
          +feedback({
            imageName: require('@pag/form-elements/image/murad.jpg'),
            name: feedback.name,
            date: feedback.date,
            description: feedback.description,
            alt: feedback.alt,
            isLiked: feedback.isLiked, 
            likeAmount: feedback.likeAmount})
